@model FSDP.DATA.EF.Application

@{
    ViewBag.Title = "Create a new application";
}
<div style="text-align:center">
    <h2>@ViewBag.Title</h2>

    <div>

        @Html.ActionLink("Back To List", "Index", null, htmlAttributes: new { @class = "btn btn-default", @role = "button" })
    </div>
</div>
<section id="about" name="about"></section>
<div class="container about">
    <div class="col-lg-8 col-lg-offset-2">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.OpenPositionId, "OpenPositionId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OpenPositionId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OpenPositionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ApplicationDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApplicationDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ResumeFilename, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ResumeFilename, new { htmlAttributes = new { @class = "form-control", type = "file", name = "resumeFile" } })
                        @Html.ValidationMessageFor(model => model.ResumeFilename, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        <input type="submit" value="Apply" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $("#PublishDate").datepicker();
            //For multiple ID's to apply the datepicker - comma separate inside the quotes
            //$('#PublishDate, #SaleDate, #CreatedDate").datepicker();
        });
    </script>
    <p>Date: <input type="text" id="datepicker"></p>
}
