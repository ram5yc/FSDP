@model FSDP.DATA.EF.Application

@{
    ViewBag.Title = "Edit Application";
}

@if (User.IsInRole("Manager"))
{
    <div style="text-align:center">
        <h2>@ViewBag.Title</h2>
        <div>
            @Html.ActionLink("Back To List", "Index", null, htmlAttributes: new { @class = "btn btn-default", @role = "button" })
        </div>
    </div>
    <section id="about" name="about"></section>
    <div class="container about">
        <div class="col-lg-6 col-lg-offset-3">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ApplicationId)
                    @Html.HiddenFor(model => model.OpenPositionId)
                    @Html.HiddenFor(model => model.UserId)
                    @Html.HiddenFor(model => model.ApplicationDate)
                    @Html.HiddenFor(model => model.ResumeFilename)

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.OpenPositionId, "Position", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("OpenPositionId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.OpenPositionId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.ApplicationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ApplicationDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ApplicationDate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.ManagerNote, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ManagerNote, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ManagerNote, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ApplicationStatus, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ApplicationStatus", null, string.Empty, htmlAttributes: new { @class = "form-control1 form-control"})
                            @Html.ValidationMessageFor(model => model.ApplicationStatus, "", new { @class = "text-danger"})
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.ResumeFilename, "Resume",htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ResumeFilename, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ResumeFilename, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <!-- /col-lg-6 -->
    </div>
}
    
